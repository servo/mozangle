name: Rust

on:
  push:
    branches-ignore:
      - gh-readonly-queue/**
      - main
  pull_request:
  merge_group:
    branches: [main]
  schedule:
    # Runs at 04:30, every Saturday
    - cron: "30 4 * * 6"

env:
  CARGO_TERM_COLOR: always

jobs:
  # build:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: ["ubuntu-22.04", "macos-latest"]
  #       cargo-options: ["", '--features "dynamic_lib"']
  #       include:
  #         - os: "windows-latest"
  #           cargo-options: '--features "egl"'
  #         - os: "windows-latest"
  #           cargo-options: '--features "build_dlls"'
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: dtolnay/rust-toolchain@1.81
  #     - name: Set env
  #       if: contains(matrix.os, 'ubuntu')
  #       run: echo "LIBCLANG_PATH=/usr/lib/llvm-14/lib" >> $GITHUB_ENV
  #     - name: Run tests
  #       run: cargo test --verbose ${{ matrix.cargo-options }}

  # linux-cross-compile:
  #   name: linux (${{ matrix.target }})
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       target:
  #         - aarch64-unknown-linux-gnu
  #         - armv7-unknown-linux-gnueabihf
  #         - aarch64-linux-android
  #   container: ghcr.io/servo/cross-${{ matrix.target }}:main
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Rust
  #       uses: dtolnay/rust-toolchain@stable
  #       with:
  #         targets: ${{ matrix.target }}
  #     - run: apt update && apt install -y libx11-dev
  #     - run: cargo test --target ${{ matrix.target }}

  android-build:
    runs-on: ubuntu-22.04
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: false
          large-packages: false
          swap-storage: false
      - uses: actions/checkout@v4
      - run: sudo apt update
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: 'tools platform-tools platforms;android-33'
      - name: Install Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26c
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: armv7-linux-androideabi
      - name: Build
        env:
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          ./android-build cargo build --target armv7-linux-android

  build_result:
    name: Result
    runs-on: ubuntu-latest
    if: always()
    needs:
      - "android-build"
      #- "build"
      #- "linux-cross-compile"

    steps:
      - name: Mark the job as successful
        run: exit 0
      - name: Mark the job as unsuccessful
        run: exit 1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
